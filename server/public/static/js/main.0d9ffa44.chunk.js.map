{"version":3,"sources":["style/Index.module.scss","store/user/reducers.ts","helpers/VK.API/VK.Auth.login.ts","store/user/types.ts","store/orderLists/types.ts","store/orderLists/reducers.ts","store/order/types.ts","store/order/reducers.ts","store/newOrder/types.ts","store/newOrder/reducers.ts","store/index.ts","helpers/API/index.ts","helpers/API/Methods.ts","store/user/actions.ts","components/NavBar.tsx","store/orderLists/actions.ts","containers/Order/DateSteps.tsx","containers/OrderLists/OrderCard/Queuing.tsx","containers/OrderLists/OrderCard/Title.tsx","containers/Order/AddExpense.tsx","containers/Order/AddNote.tsx","containers/OrderLists/OrderCard/FooterActions.tsx","containers/OrderLists/OrderCard/index.tsx","containers/OrderLists/List.tsx","containers/OrderLists/index.tsx","components/NoMatch.tsx","containers/Login/LoginIn.tsx","containers/Login/Register.tsx","containers/Login/Login.tsx","containers/Order/Title.tsx","containers/Order/Description.tsx","containers/Order/Expense.tsx","containers/Order/Expenses.tsx","containers/Order/Note.tsx","containers/Order/Notes.tsx","containers/Order/Content.tsx","containers/Order/index.tsx","store/order/actions.ts","containers/Order/NewOrder.tsx","store/newOrder/actions.ts","containers/Archive/Archive.tsx","components/Readme.tsx","containers/App.tsx","serviceWorker/serviceWorker.ts","index.tsx","style/Login.module.scss","style/UI.module.scss","style/Order.module.scss","style/App.module.scss"],"names":["module","exports","app","ib","page","user","btn","VK_Auth_login","callback","VK","Auth","login","neededRights","Object","values","notify","friends","photos","audio","video","stories","pages","rightLink","status","notes","docs","groups","notifications","stats","email","market","reduce","prev","cur","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","userString","localStorage","getItem","JSON","parse","error","isPending","initialState","userReducer","state","arguments","length","undefined","action","type","objectSpread","GET_ORDERS_REQUEST","GET_ORDERS_SUCCESS","GET_ORDERS_FAIL","PUT_ORDER_REQUEST","PUT_ORDER_SUCCESS","PUT_ORDER_FAIL","CHANGE_LIST","list","listName","errorMessage","orderListsReducer","filter","order","_id","currentOrder","id","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAIL","SET_ORDER_EDIT_MODE","SET_ORDER_READ_MODE","HANDLE_CHANGE","editedOrder","isEdit","orderReducer","assign","POST_ORDER_REQUEST","POST_ORDER_SUCCESS","POST_ORDER_FAIL","HANDLE_CHANGE_NEW","date","number","cleanOrder","title","description","dateOrder","Date","dateDeadline","setDate","getDate","priceOrder","priceMaterials","newOrder","newOrderReducer","slice","unshift","history","createBrowserHistory","rootReducer","combineReducers","router","connectRouter","orderLists","cancel","HTTP","store","middlewares","thunkMiddleware","routerMiddleware","middleWareEnhancer","applyMiddleware","apply","concat","logger","createStore","composeWithDevTools","configureStore","API","http","url","auth","data","token","getState","options","headers","Authorization","cancelToken","axios","CancelToken","canceler","Error","GET","get","POST","post","PUT","put","DELETE","delete","Authorized","Guest","GetOrdersStartWork","GetOrdersDeadline","GetNotPayedOrders","UpdateOrder","submitLoginVK","dispatch","VKLogin","r","session","password","response","message","NavBar","props","react_default","a","createElement","Drawer","className","variant","anchor","List","component","ListItem","Link","to","button","ListItemIcon","MoveToInbox_default","ListItemText","primary","divider","onClick","removeItem","username","getList","request","then","catch","DateSteps","handleChange","activeStep","dateStartWork","dateFinishWork","datePay","findActiveStep","steps","name","buildSteps","CardContent","Stepper","style","padding","alternativeLabel","map","label","index","Step","key","StepLabel","DatePicker","autoOk","format","value","onChange","toLocaleDateString","Queuing","maxDate","handleDateChange","tomorrow","minDate","margin","Title","showedTab","slug","display","justifyContent","alignItems","react_router_dom","color","fontSize","calcRange","fromDate","toDate","dif","getTime","Math","abs","floor","AddExpense","_React$useState","React","useState","_React$useState2","slicedToArray","open","setOpen","handleClose","Button","AttachMoney_default","Dialog","onClose","DialogTitle","DialogContent","TextField","fullWidth","DialogActions","AddNote","AddComment_default","DialogContentText","autoFocus","FooterActions","handler","CardActions","FooterActions_Button","text","e","Check_default","OrderCard","updateOrder","Card","CardHeader","overflow","CircularProgress","size","OrderLists","changeTab","event","tab","_this","setList","this","Container","maxWidth","Tabs","indicatorColor","textColor","Tab","List_List","Component","mapDispatchToProps","connect","NoMatch","LoginIn","onSubmitLogin","preventDefault","_this$state","handleInput","_event$target","target","setState","defineProperty","_this$props","Paper","loginClasses","paper","onSubmit","form","required","UIClasses","fetcingWrapper","disabled","fetching","Snackbar","setItem","stringify","onSubmitLoginVK","Register","onSubmitRegister","_event$currentTarget","currentTarget","Login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","newValue","tabValue","main","lib_default","Login_LoginIn","Login_Register","_props$editedOrder","setEditState","submitButton","cancelEditState","Cancel_default","Done_default","flex","Edit_default","Description","multiline","Expense","cost","spendDate","Expenses","expenses","sum","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails","item","ExpansionPanelActions","newExpenses","push","Add_default","Note","body","createdAt","Notes","newNotes","Content","Order","toggleEditMode","_callee","regenerator_default","wrap","_context","next","stop","field","getOrder","width","Title_Title","GetOrder","location","pathname","split","NewOrder","postOrder","getLastTen","_this2","_this$props$newOrder","commonProps","newOrderClasses","autoComplete","header","content","Grid","container","spacing","justify","alignContent","xs","InputAdornmentProps","position","maxDateMessage","minDateMessage","createData","calories","fat","carbs","protein","rows","desc","b","orderBy","headRows","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","inputProps","aria-label","row","align","sortDirection","TableSortLabel","active","direction","property","EnhancedTableToolbar","Toolbar","Tooltip","IconButton","Delete_default","FilterList_default","EnhancedTable","setOrder","_React$useState3","_React$useState4","setOrderBy","_React$useState5","_React$useState6","selected","setSelected","_React$useState7","_React$useState8","setPage","_React$useState9","_React$useState10","rowsPerPage","setRowsPerPage","emptyRows","min","Archive_EnhancedTableToolbar","Table","aria-labelledby","newSelecteds","n","TableBody","array","cmp","stabilizedThis","el","sort","stableSort","getSorting","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","handleClick","role","aria-checked","tabIndex","scope","height","colSpan","TablePagination","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","ReadMe","App","redirectToLogin","Fragment","react_router","Login_Login","redirectToMain","esm","appRoot","navbar","MuiPickersUtilsProvider","utils","DateFnsUtils","locale","ruLocale","path","render","exact","Archive","Boolean","window","hostname","match","ReactDOM","es","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d9ffa44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"Index_app__2EEYe\",\"ib\":\"Index_ib__1PehE\",\"page\":\"Index_page__3TweV\",\"user\":\"Index_user__1hBN8\",\"btn\":\"Index_btn__i5uZO\"};","import {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGOUT,\r\n  UserState,\r\n  LoginActionTypes\r\n} from \"./types\";\r\n\r\nlet user: UserState;\r\nconst userString = localStorage.getItem(\"user\");\r\nif (userString) {\r\n  user = JSON.parse(userString);\r\n  user.error = false;\r\n  user.isPending = false;\r\n} else {\r\n  user = {\r\n    error: false,\r\n    isPending: false\r\n  };\r\n}\r\n\r\nconst initialState: UserState = user;\r\n\r\nexport function userReducer(state = initialState, action: LoginActionTypes) {\r\n  switch (action.type) {\r\n    case REGISTER_REQUEST:\r\n      return { ...state, ...action };\r\n    case REGISTER_SUCCESS:\r\n      return { ...state, ...action };\r\n    case REGISTER_FAIL:\r\n      return { ...state, ...action };\r\n\r\n    case LOGIN_REQUEST:\r\n      return { ...state, ...action };\r\n    case LOGIN_SUCCESS:\r\n      return { ...state, ...action };\r\n    case LOGIN_FAIL:\r\n      return { ...state, ...action };\r\n\r\n    case LOGOUT:\r\n      return { ...state, ...action };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export default function(callback: Function) {\r\n  //eslint-disable-next-line no-undef\r\n  VK.Auth.login(callback, neededRights);\r\n}\r\nconst userRights = {\r\n  notify: 1,\r\n  friends: 2,\r\n  photos: 4,\r\n  audio: 8,\r\n  video: 16,\r\n  stories: 64,\r\n  pages: 128,\r\n  rightLink: 256,\r\n  status: 1024,\r\n  notes: 2048,\r\n  docs: 131072,\r\n  groups: 262144,\r\n  notifications: 1048576,\r\n  stats: 1048576,\r\n  email: 4194304,\r\n  market: 134217728\r\n};\r\n\r\n// in dev sum all rights\r\nconst neededRights = Object.values(userRights).reduce(\r\n  (prev, cur) => prev + cur,\r\n  0\r\n);\r\n","export const REGISTER_REQUEST = \"REGISTER_REQUEST\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport interface UserState {\r\n  password?: string;\r\n  email?: string;\r\n  username?: string;\r\n  isPending: boolean;\r\n  error: boolean;\r\n  errorMessage?: string;\r\n  token?: string;\r\n}\r\ninterface SubmitRegisterRequest {\r\n  type: typeof REGISTER_REQUEST;\r\n  isPending: boolean;\r\n}\r\ninterface SubmitRegisterSuccess {\r\n  type: typeof REGISTER_SUCCESS;\r\n  user: UserState;\r\n  isPending: boolean;\r\n  password: undefined;\r\n}\r\n\r\ninterface SubmitRegisterFail {\r\n  type: typeof REGISTER_FAIL;\r\n  isPending: boolean;\r\n  error: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\ninterface LoginRequest {\r\n  type: typeof LOGIN_REQUEST;\r\n  isPending: boolean;\r\n}\r\ninterface LoginSuccess {\r\n  type: typeof LOGIN_SUCCESS;\r\n  user: UserState;\r\n  isPending: boolean;\r\n  password: undefined;\r\n}\r\ninterface LoginFail {\r\n  type: typeof LOGIN_FAIL;\r\n  isPending: boolean;\r\n  error: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\ninterface Logout {\r\n  type: typeof LOGOUT;\r\n  password: undefined;\r\n  email: undefined;\r\n  username: undefined;\r\n  isPending: false;\r\n  error: false;\r\n  token: undefined;\r\n}\r\n\r\nexport type LoginActionTypes =\r\n  | SubmitRegisterRequest\r\n  | SubmitRegisterSuccess\r\n  | SubmitRegisterFail\r\n  | LoginRequest\r\n  | LoginFail\r\n  | LoginSuccess\r\n  | Logout;\r\n\r\nexport interface iUser {\r\n  email: string;\r\n  password: string;\r\n  username?: string;\r\n}\r\n","import { iOrder } from '../order/types';\r\n\r\nexport const GET_ORDERS_REQUEST = 'GET_ORDERS_REQUEST';\r\nexport const GET_ORDERS_SUCCESS = 'GET_ORDERS_SUCCESS';\r\nexport const GET_ORDERS_FAIL = 'GET_ORDERS_FAIL';\r\nexport const PUT_ORDER_REQUEST = 'PUT_ORDER_REQUEST';\r\nexport const PUT_ORDER_SUCCESS = 'PUT_ORDER_SUCCESS';\r\nexport const PUT_ORDER_FAIL = 'PUT_ORDER_FAIL';\r\nexport const CHANGE_LIST = 'CHANGE_LIST';\r\n\r\nexport interface OrderListsState {\r\n  listName: Tabs;\r\n  list: iOrder[];\r\n  isPending: boolean;\r\n  error: boolean;\r\n  errorMessage?: string;\r\n}\r\n\r\nexport type Tabs = 'DateDeadline' | 'DateStartWork' | 'NotPayed';\r\n\r\ninterface ChangeList {\r\n  type: typeof CHANGE_LIST;\r\n  listName?: Tabs;\r\n}\r\n\r\ninterface PutOrderRequest {\r\n  type: typeof PUT_ORDER_REQUEST;\r\n  isPending: boolean;\r\n  ordersList?: iOrder[];\r\n}\r\n\r\ninterface PutOrderSuccess {\r\n  type: typeof PUT_ORDER_SUCCESS;\r\n  isPending: boolean;\r\n  currentOrder: iOrder;\r\n}\r\n\r\ninterface PutOrderFail {\r\n  type: typeof PUT_ORDER_FAIL;\r\n  isPending: boolean;\r\n  error: boolean;\r\n  errorMessage: string;\r\n  currentOrder?: iOrder;\r\n}\r\n\r\ninterface GetOrderRequest {\r\n  type: typeof GET_ORDERS_REQUEST;\r\n  isPending: boolean;\r\n  ordersList?: iOrder[];\r\n}\r\n\r\ninterface GetOrderSuccess {\r\n  type: typeof GET_ORDERS_SUCCESS;\r\n  isPending: boolean;\r\n  ordersList?: iOrder[];\r\n  currentOrder?: iOrder;\r\n}\r\n\r\ninterface GetOrderFail {\r\n  type: typeof GET_ORDERS_FAIL;\r\n  isPending: boolean;\r\n  error: boolean;\r\n  errorMessage: string;\r\n  currentOrder?: iOrder;\r\n}\r\n\r\nexport type LoginActionTypes =\r\n  | GetOrderRequest\r\n  | GetOrderSuccess\r\n  | GetOrderFail\r\n  | PutOrderRequest\r\n  | PutOrderSuccess\r\n  | PutOrderFail\r\n  | ChangeList;\r\n","import {\r\n  GET_ORDERS_REQUEST,\r\n  GET_ORDERS_SUCCESS,\r\n  GET_ORDERS_FAIL,\r\n  PUT_ORDER_REQUEST,\r\n  PUT_ORDER_SUCCESS,\r\n  PUT_ORDER_FAIL,\r\n  CHANGE_LIST,\r\n  OrderListsState,\r\n  LoginActionTypes\r\n} from './types';\r\n\r\nconst initialState: OrderListsState = {\r\n  list: [],\r\n  listName: 'DateDeadline',\r\n  isPending: false,\r\n  error: false,\r\n  errorMessage: ''\r\n};\r\n\r\nexport function orderListsReducer(state = initialState, action: LoginActionTypes) {\r\n  switch (action.type) {\r\n    case GET_ORDERS_REQUEST:\r\n      return { ...state, ...action };\r\n    case GET_ORDERS_SUCCESS:\r\n      return { ...state, ...action };\r\n    case GET_ORDERS_FAIL:\r\n      if (action.errorMessage === 'cancelled') action.isPending = true;\r\n      return { ...state, ...action };\r\n\r\n    case PUT_ORDER_REQUEST:\r\n      return { ...state, ...action };\r\n    case PUT_ORDER_SUCCESS:\r\n      const list = state.list.filter(order => order._id !== action.currentOrder.id);\r\n      return { ...state, ...action, list };\r\n    case PUT_ORDER_FAIL:\r\n      return { ...state, ...action };\r\n\r\n    case CHANGE_LIST:\r\n      return { ...state, ...action };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const GET_ORDER_REQUEST = 'GET_ORDER_REQUEST';\r\nexport const GET_ORDER_SUCCESS = 'GET_ORDER_SUCCESS';\r\nexport const GET_ORDER_FAIL = 'GET_ORDER_FAIL';\r\nexport const PUT_ORDER_REQUEST = 'PUT_ORDER_REQUEST';\r\nexport const PUT_ORDER_SUCCESS = 'PUT_ORDER_SUCCESS';\r\nexport const PUT_ORDER_FAIL = 'PUT_ORDER_FAIL';\r\nexport const SET_ORDER_EDIT_MODE = 'SET_ORDER_EDIT_MODE';\r\nexport const SET_ORDER_READ_MODE = 'SET_ORDER_READ_MODE';\r\nexport const HANDLE_CHANGE = 'HANDLE_CHANGE';\r\n\r\nexport interface OrderState {\r\n  order: iOrder | null;\r\n  editedOrder: iOrder | null;\r\n  isEdit: boolean;\r\n  isPending: boolean;\r\n  error: boolean;\r\n  errorMessage?: string;\r\n}\r\n\r\ninterface HandleChange {\r\n  type: typeof HANDLE_CHANGE;\r\n  editedOrder: { [field in keyof iOrder]?: any };\r\n}\r\n\r\ninterface SetOrderEditMode {\r\n  type: typeof SET_ORDER_EDIT_MODE;\r\n  isEdit: boolean;\r\n}\r\n\r\ninterface SetOrderReadonlyMode {\r\n  type: typeof SET_ORDER_READ_MODE;\r\n  isEdit: boolean;\r\n}\r\n\r\ninterface PutOrderRequest {\r\n  type: typeof PUT_ORDER_REQUEST;\r\n  isPending: boolean;\r\n  ordersList?: iOrder[];\r\n}\r\n\r\ninterface PutOrderSuccess {\r\n  type: typeof PUT_ORDER_SUCCESS;\r\n  isPending: boolean;\r\n  ordersList?: iOrder[];\r\n  currentOrder?: iOrder;\r\n}\r\n\r\ninterface PutOrderFail {\r\n  type: typeof PUT_ORDER_FAIL;\r\n  isPending: boolean;\r\n  error: boolean;\r\n  errorMessage: string;\r\n  currentOrder?: iOrder;\r\n}\r\n\r\ninterface GetOrderRequest {\r\n  type: typeof GET_ORDER_REQUEST;\r\n  isPending: boolean;\r\n  ordersList?: iOrder[];\r\n}\r\n\r\ninterface GetOrderSuccess {\r\n  type: typeof GET_ORDER_SUCCESS;\r\n  isPending: boolean;\r\n  ordersList?: iOrder[];\r\n  currentOrder?: iOrder;\r\n}\r\n\r\ninterface GetOrderFail {\r\n  type: typeof GET_ORDER_FAIL;\r\n  isPending: boolean;\r\n  error: boolean;\r\n  errorMessage: string;\r\n  currentOrder?: iOrder;\r\n}\r\n\r\nexport type LoginActionTypes =\r\n  | GetOrderRequest\r\n  | GetOrderSuccess\r\n  | GetOrderFail\r\n  | PutOrderRequest\r\n  | PutOrderSuccess\r\n  | PutOrderFail\r\n  | SetOrderReadonlyMode\r\n  | SetOrderEditMode\r\n  | HandleChange;\r\n\r\nexport interface iOrder {\r\n  id?: string;\r\n  _id?: string;\r\n  slug?: string;\r\n  title: string;\r\n  priceOrder: number;\r\n  description: string;\r\n  dateOrder: Date;\r\n  dateStartWork?: Date;\r\n  dateDeadline: Date;\r\n  dateFinishWork?: Date;\r\n  datePay?: Date;\r\n  expenses: iExpense[];\r\n  notes: iNote[];\r\n  customer?: iCustomer;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  author: string;\r\n}\r\n\r\nexport interface iExpense {\r\n  _id?: string;\r\n  description: string;\r\n  cost: number;\r\n  spendDate?: Date;\r\n}\r\n\r\nexport interface iNote {\r\n  _id?: string;\r\n  title: string;\r\n  body: string;\r\n  createdAt?: Date;\r\n}\r\n\r\nexport interface iCustomer {}\r\n","import {\r\n  GET_ORDER_REQUEST,\r\n  GET_ORDER_SUCCESS,\r\n  GET_ORDER_FAIL,\r\n  PUT_ORDER_REQUEST,\r\n  PUT_ORDER_SUCCESS,\r\n  PUT_ORDER_FAIL,\r\n  SET_ORDER_READ_MODE,\r\n  SET_ORDER_EDIT_MODE,\r\n  HANDLE_CHANGE,\r\n  OrderState,\r\n  LoginActionTypes\r\n} from './types';\r\n\r\nconst initialState: OrderState = {\r\n  order: null,\r\n  editedOrder: null,\r\n  isEdit: false,\r\n  isPending: false,\r\n  error: false,\r\n  errorMessage: ''\r\n};\r\n\r\nexport function orderReducer(state = initialState, action: LoginActionTypes) {\r\n  switch (action.type) {\r\n    case GET_ORDER_REQUEST:\r\n      return { ...state, ...action };\r\n    case GET_ORDER_SUCCESS:\r\n      return { ...state, ...action };\r\n    case GET_ORDER_FAIL:\r\n      return { ...state, ...action };\r\n\r\n    case PUT_ORDER_REQUEST:\r\n      return { ...state, ...action };\r\n    case PUT_ORDER_SUCCESS:\r\n      return { ...state, ...action };\r\n    case PUT_ORDER_FAIL:\r\n      return { ...state, ...action };\r\n\r\n    case SET_ORDER_EDIT_MODE:\r\n      return { ...state, ...action };\r\n    case SET_ORDER_READ_MODE:\r\n      return { ...state, isEdit: action.isEdit, editedOrder: state.order };\r\n\r\n    case HANDLE_CHANGE:\r\n      return { ...state, editedOrder: Object.assign({}, state.editedOrder, action.editedOrder) };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { iOrder } from '../order/types';\r\n\r\nexport const POST_ORDER_REQUEST = 'POST_ORDER_REQUEST';\r\nexport const POST_ORDER_SUCCESS = 'POST_ORDER_SUCCESS';\r\nexport const POST_ORDER_FAIL = 'POST_ORDER_FAIL';\r\nexport const GET_ORDERS_REQUEST = 'GET_ORDERS_REQUEST';\r\nexport const GET_ORDERS_SUCCESS = 'GET_ORDERS_SUCCESS';\r\nexport const GET_ORDERS_FAIL = 'GET_ORDERS_FAIL';\r\nexport const HANDLE_CHANGE_NEW = 'HANDLE_CHANGE_NEW';\r\nexport const HANDLE_CHANGE_EDIT = 'HANDLE_CHANGE_EDIT';\r\n\r\nexport interface NewOrderState {\r\n  newOrder: iNewOrder;\r\n  list: iOrder[];\r\n  isPending: boolean;\r\n  error: boolean;\r\n  errorMessage?: string;\r\n}\r\n\r\ninterface HandleChangeNew {\r\n  type: typeof HANDLE_CHANGE_NEW;\r\n  newOrder: { [field in keyof iNewOrder]?: any };\r\n}\r\n\r\ninterface PostOrderRequest {\r\n  type: typeof POST_ORDER_REQUEST;\r\n  isPending: boolean;\r\n  ordersList?: iOrder[];\r\n}\r\n\r\ninterface PostOrderSuccess {\r\n  type: typeof POST_ORDER_SUCCESS;\r\n  isPending: boolean;\r\n  order: iOrder;\r\n}\r\n\r\ninterface PostOrderFail {\r\n  type: typeof POST_ORDER_FAIL;\r\n  isPending: boolean;\r\n  error: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\ninterface GetOrderRequest {\r\n  type: typeof GET_ORDERS_REQUEST;\r\n  isPending: boolean;\r\n  ordersList?: iOrder[];\r\n}\r\n\r\ninterface GetOrderSuccess {\r\n  type: typeof GET_ORDERS_SUCCESS;\r\n  isPending: boolean;\r\n  ordersList?: iOrder[];\r\n}\r\n\r\ninterface GetOrderFail {\r\n  type: typeof GET_ORDERS_FAIL;\r\n  isPending: boolean;\r\n  error: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport type LoginActionTypes =\r\n  | HandleChangeNew\r\n  | PostOrderRequest\r\n  | PostOrderSuccess\r\n  | PostOrderFail\r\n  | GetOrderRequest\r\n  | GetOrderSuccess\r\n  | GetOrderFail;\r\n\r\nexport interface iNewOrder {\r\n  title: string;\r\n  description: string;\r\n  dateOrder: Date;\r\n  dateDeadline: Date;\r\n  priceOrder: number;\r\n  priceMaterials: number;\r\n}\r\n","import {\r\n  POST_ORDER_REQUEST,\r\n  POST_ORDER_SUCCESS,\r\n  POST_ORDER_FAIL,\r\n  GET_ORDERS_REQUEST,\r\n  GET_ORDERS_SUCCESS,\r\n  GET_ORDERS_FAIL,\r\n  HANDLE_CHANGE_NEW,\r\n  NewOrderState,\r\n  LoginActionTypes,\r\n  iNewOrder\r\n} from './types';\r\n\r\nfunction increaseDate(date: Date, number: number) {\r\n  return new Date(date.setDate(date.getDate() + number));\r\n}\r\n\r\nconst cleanOrder: iNewOrder = {\r\n  title: '',\r\n  description: '',\r\n  dateOrder: new Date(),\r\n  dateDeadline: increaseDate(new Date(), 5),\r\n  priceOrder: 0,\r\n  priceMaterials: 0\r\n};\r\n\r\nconst initialState: NewOrderState = {\r\n  newOrder: cleanOrder,\r\n  list: [],\r\n  isPending: false,\r\n  error: false,\r\n  errorMessage: ''\r\n};\r\n\r\nexport function newOrderReducer(state = initialState, action: LoginActionTypes) {\r\n  switch (action.type) {\r\n    case POST_ORDER_REQUEST:\r\n      return { ...state, ...action };\r\n    case POST_ORDER_SUCCESS:\r\n      const list = state.list.slice();\r\n      list.unshift(action.order);\r\n      return { ...state, list: list, isPending: action.isPending, type: action.type, newOrder: cleanOrder };\r\n    case POST_ORDER_FAIL:\r\n      return { ...state, ...action };\r\n\r\n    case GET_ORDERS_REQUEST:\r\n      return { ...state, ...action };\r\n    case GET_ORDERS_SUCCESS:\r\n      return { ...state, ...action };\r\n    case GET_ORDERS_FAIL:\r\n      return { ...state, ...action };\r\n\r\n    case HANDLE_CHANGE_NEW:\r\n      return { ...state, newOrder: Object.assign({}, state.newOrder, action.newOrder) };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { routerMiddleware, RouterState, connectRouter } from \"connected-react-router\";\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createBrowserHistory, History } from \"history\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\n\r\n// import { photosReducer } from \"./photos/reducers\";\r\n// import { friendsReducer } from \"./friends/reducers\";\r\nimport { userReducer } from \"./user/reducers\";\r\nimport { orderListsReducer } from \"./orderLists/reducers\";\r\nimport { orderReducer } from \"./order/reducers\";\r\nimport { newOrderReducer } from \"./newOrder/reducers\";\r\n\r\nimport { UserState } from \"./user/types\";\r\nimport { OrderListsState } from \"./orderLists/types\";\r\nimport { OrderState } from \"./order/types\";\r\nimport { NewOrderState } from \"./newOrder/types\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst rootReducer = (history: History) =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    user: userReducer,\r\n    order: orderReducer,\r\n    newOrder: newOrderReducer,\r\n    orderLists: orderListsReducer\r\n    // photos: photosReducer,\r\n    // friends: friendsReducer\r\n  });\r\n\r\nfunction configureStore() {\r\n  const middlewares = [thunkMiddleware, routerMiddleware(history)];\r\n  const middleWareEnhancer = applyMiddleware(...middlewares, logger);\r\n  const store = createStore(rootReducer(history), composeWithDevTools(middleWareEnhancer));\r\n  return store;\r\n}\r\nexport interface State {\r\n  router: RouterState;\r\n  user: UserState;\r\n  orderLists: OrderListsState;\r\n  order: OrderState;\r\n  newOrder: NewOrderState;\r\n  // photos: any;\r\n  // friends: any;\r\n}\r\n\r\nexport const store = configureStore();\r\n","import axios, { Canceler } from \"axios\";\r\nimport { store } from \"../../store\";\r\n\r\nexport let cancel: Canceler;\r\n\r\nexport enum HTTP {\r\n  GET = \"get\",\r\n  POST = \"post\",\r\n  PUT = \"put\",\r\n  DELETE = \"delete\"\r\n}\r\nexport default function API(http: HTTP, url: string, auth: boolean = false, data?: any) {\r\n  /* может потом имеет смысл много интерфейсов пихнуть в data */\r\n  if (auth) return Authorized(http, url, data);\r\n  else return Guest(http, url, data);\r\n}\r\n\r\nfunction Authorized(http: HTTP, url: string, data: any) {\r\n  const token = store.getState().user.token;\r\n  const options = {\r\n    headers: {\r\n      Authorization: `Token ${token}`\r\n    },\r\n    cancelToken: new axios.CancelToken(function executor(canceler) {\r\n      cancel = canceler;\r\n    })\r\n  };\r\n  if (!token) throw new Error(\"Войдите под своим именем пожалуйста или зарегистрируйтесь\");\r\n  switch (http) {\r\n    case HTTP.GET:\r\n      return axios.get(url, options);\r\n    case HTTP.POST:\r\n      return axios.post(url, data, options);\r\n    case HTTP.PUT:\r\n      return axios.put(url, data, options);\r\n    case HTTP.DELETE:\r\n      return axios.delete(url, options);\r\n    default:\r\n      throw new Error(\"Использован неизвестный HTTP метод\");\r\n  }\r\n}\r\n\r\nfunction Guest(http: HTTP, url: string, data: any) {\r\n  const options = {\r\n    cancelToken: new axios.CancelToken(function executor(canceler) {\r\n      cancel = canceler;\r\n    })\r\n  };\r\n  switch (http) {\r\n    case HTTP.GET:\r\n      return axios.get(url, options);\r\n    case HTTP.POST:\r\n      return axios.post(url, data, options);\r\n    case HTTP.PUT:\r\n      return axios.put(url, data, options);\r\n    case HTTP.DELETE:\r\n      return axios.delete(url, options);\r\n    default:\r\n      throw new Error(\"Использован неизвестный HTTP метод\");\r\n  }\r\n}\r\n","import API, { HTTP } from '.';\r\nimport { iUser } from '../../store/user/types';\r\nimport { iOrder } from '../../store/order/types';\r\nimport { iNewOrder } from '../../store/newOrder/types';\r\n\r\nexport function Generate() {\r\n  return API(HTTP.GET, '/generate', true);\r\n}\r\n\r\nexport function Register(data: iUser) {\r\n  return API(HTTP.POST, '/api/users', false, { user: { ...data } });\r\n}\r\n\r\nexport function Login(data: iUser) {\r\n  return API(HTTP.POST, '/api/users/login', false, { user: { ...data } });\r\n}\r\n\r\nexport function GetOrdersStartWork() {\r\n  return API(HTTP.GET, '/api/orders/byDateStartWork', true);\r\n}\r\n\r\nexport function GetOrdersDeadline() {\r\n  return API(HTTP.GET, '/api/orders/byDateDeadline', true);\r\n}\r\n\r\nexport function GetNotPayedOrders() {\r\n  return API(HTTP.GET, '/api/orders/notPayed', true);\r\n}\r\n\r\nexport function GetLastTenOrders() {\r\n  return API(HTTP.GET, '/api/orders/lastTen', true);\r\n}\r\n\r\nexport function GetAllOrders() {\r\n  return API(HTTP.GET, '/api/orders', true);\r\n}\r\n\r\nexport function GetOrder(slug: string) {\r\n  return API(HTTP.GET, `/api/orders/${slug}`, true);\r\n}\r\n\r\nexport function PostOrder(data: iNewOrder) {\r\n  return API(HTTP.POST, '/api/orders', true, { order: { ...data } });\r\n}\r\n\r\nexport function UpdateOrder(data: iOrder) {\r\n  return API(HTTP.PUT, '/api/orders', true, { order: { ...data } });\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { VKLogin } from \"../../helpers/VK.API/index\";\r\nimport { Register, Login } from \"../../helpers/API/Methods\";\r\nimport {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGOUT,\r\n  LoginActionTypes\r\n} from \"./types\";\r\n\r\nexport function submitRegister(email: string, password: string, username: string) {\r\n  return (dispatch: Dispatch<LoginActionTypes>) => {\r\n    dispatch({\r\n      type: REGISTER_REQUEST,\r\n      isPending: true\r\n    });\r\n    Register({ email, password, username }).then(\r\n      response => {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\r\n        dispatch({\r\n          type: REGISTER_SUCCESS,\r\n          isPending: false,\r\n          password: undefined,\r\n          ...response.data.user\r\n        });\r\n      },\r\n      response => {\r\n        dispatch({\r\n          type: REGISTER_FAIL,\r\n          isPending: false,\r\n          error: true,\r\n          errorMessage: response.response.data.message\r\n        });\r\n      }\r\n    );\r\n  };\r\n}\r\n\r\nexport function submitLogin(email: string, password: string) {\r\n  return (dispatch: Dispatch<LoginActionTypes>) => {\r\n    dispatch({\r\n      type: LOGIN_REQUEST,\r\n      isPending: true\r\n    });\r\n    Login({ email, password }).then(\r\n      response => {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          isPending: false,\r\n          password: undefined,\r\n          ...response.data.user\r\n        });\r\n      },\r\n      response => {\r\n        dispatch({\r\n          type: LOGIN_FAIL,\r\n          isPending: false,\r\n          error: true,\r\n          errorMessage: response.response.data.message\r\n        });\r\n      }\r\n    );\r\n  };\r\n}\r\n\r\nexport function submitLoginVK() {\r\n  return function(dispatch: Dispatch<LoginActionTypes>) {\r\n    dispatch({\r\n      type: LOGIN_REQUEST,\r\n      isPending: true\r\n    });\r\n    VKLogin((r: any) => {\r\n      if (r.session) {\r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          isPending: false,\r\n          password: undefined,\r\n          ...r.session.data.user\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: LOGIN_FAIL,\r\n          isPending: false,\r\n          error: true,\r\n          errorMessage: r.session.response.data.message\r\n        });\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(\"user\");\r\n  return {\r\n    type: LOGOUT,\r\n    password: undefined,\r\n    email: undefined,\r\n    username: undefined,\r\n    isPending: undefined,\r\n    error: undefined,\r\n    token: undefined\r\n  };\r\n}\r\n","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { Link } from 'react-router-dom';\nimport { ListItemText, ListItemIcon } from '@material-ui/core';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport { logout } from '../store/user/actions';\nimport { store } from '../store';\nimport { Generate } from './../helpers/API/Methods';\nimport ReadMe from './Readme';\n\ninterface iProps {\n  className: string;\n}\n\nexport default function NavBar(props: iProps) {\n  return (\n    <Drawer className={props.className} variant='permanent' anchor='left'>\n      <List component='nav'>\n        <ListItem component={Link} to='/orders/neworder' button>\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary='Новый заказ' />\n        </ListItem>\n        <ListItem divider />\n        <ListItem component={Link} to='/' button>\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary='Главная' />\n        </ListItem>\n        <ListItem component={Link} to='/archive' button>\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary='Архив' />\n        </ListItem>\n        <ListItem button onClick={() => store.dispatch(logout())}>\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary='Выйти' />\n        </ListItem>\n        <ListItem button onClick={() => Generate()}>\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary='Generate' />\n        </ListItem>\n        <ListItem component={Link} to='/readme' button>\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary='ReadMe' />\n        </ListItem>\n      </List>\n    </Drawer>\n  );\n}\n","import { Dispatch } from 'redux';\r\nimport { cancel } from '../../helpers/API'; //импортируем canceller (один на всех, или все таки на каждый запрос разный создается? надо как-то проверить)\r\nimport { iOrder } from '../order/types';\r\nimport { AxiosResponse } from 'axios';\r\nimport { GetOrdersDeadline, GetOrdersStartWork, GetNotPayedOrders, UpdateOrder } from '../../helpers/API/Methods';\r\nimport {\r\n  GET_ORDERS_REQUEST,\r\n  GET_ORDERS_SUCCESS,\r\n  GET_ORDERS_FAIL,\r\n  PUT_ORDER_REQUEST,\r\n  PUT_ORDER_SUCCESS,\r\n  PUT_ORDER_FAIL,\r\n  CHANGE_LIST,\r\n  LoginActionTypes,\r\n  Tabs\r\n} from './types';\r\n\r\nexport function setList(listName: Tabs) {\r\n  return (dispatch: Dispatch<LoginActionTypes>) => {\r\n    dispatch({\r\n      type: CHANGE_LIST,\r\n      listName: listName\r\n    });\r\n    if (listName === 'DateDeadline') return getList(dispatch, GetOrdersDeadline);\r\n    if (listName === 'DateStartWork') return getList(dispatch, GetOrdersStartWork);\r\n    if (listName === 'NotPayed') return getList(dispatch, GetNotPayedOrders);\r\n  };\r\n}\r\n\r\nexport function updateOrder(order: iOrder) {\r\n  return (dispatch: Dispatch<LoginActionTypes>) => {\r\n    if (cancel) cancel('cancelled');\r\n    dispatch({\r\n      type: PUT_ORDER_REQUEST,\r\n      isPending: true\r\n    });\r\n    UpdateOrder(order)\r\n      .then(response => {\r\n        dispatch({\r\n          type: PUT_ORDER_SUCCESS,\r\n          isPending: false,\r\n          currentOrder: response.data\r\n        });\r\n      })\r\n      .catch(response => {\r\n        dispatch({\r\n          type: PUT_ORDER_FAIL,\r\n          isPending: false,\r\n          error: true,\r\n          errorMessage: response.message\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nfunction getList(dispatch: Dispatch<LoginActionTypes>, request: () => Promise<AxiosResponse<any>>) {\r\n  if (cancel) cancel('cancelled');\r\n  dispatch({\r\n    type: GET_ORDERS_REQUEST,\r\n    isPending: true,\r\n    list: []\r\n  });\r\n  request()\r\n    .then(response => {\r\n      dispatch({\r\n        type: GET_ORDERS_SUCCESS,\r\n        isPending: false,\r\n        list: response.data\r\n      });\r\n    })\r\n    .catch(response => {\r\n      dispatch({\r\n        type: GET_ORDERS_FAIL,\r\n        isPending: false,\r\n        error: true,\r\n        errorMessage: response.message\r\n      });\r\n    });\r\n}\r\n","import React from 'react';\r\nimport { Stepper, Step, StepLabel, CardContent } from '@material-ui/core';\r\nimport { iOrder } from '../../store/order/types';\r\nimport { MaterialUiPickersDate, DatePicker } from '@material-ui/pickers';\r\n\r\ninterface iProps {\r\n  editedOrder: iOrder;\r\n  isEdit?: boolean;\r\n  handleChange?: (field: keyof iOrder, value: string | MaterialUiPickersDate) => void;\r\n}\r\n\r\ninterface iStep {\r\n  title: string;\r\n  date?: Date;\r\n  name: 'dateOrder' | 'dateStartWork' | 'dateDeadline' | 'dateFinishWork' | 'datePay';\r\n}\r\n\r\nexport function DateSteps(props: iProps) {\r\n  const { isEdit, handleChange } = props;\r\n  const activeStep = findActiveStep(props.editedOrder);\r\n  const steps = buildSteps(props.editedOrder);\r\n  return (\r\n    <CardContent>\r\n      <Stepper style={{ padding: 0 }} activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label, index) => (\r\n          <Step key={index}>\r\n            <StepLabel>\r\n              <span>{label.title}</span>\r\n              <br />\r\n              {isEdit && handleChange && (\r\n                <DatePicker\r\n                  autoOk\r\n                  variant='inline'\r\n                  format='d MMMM yyyy'\r\n                  value={label.date}\r\n                  onChange={date => handleChange(label.name, date)}\r\n                />\r\n              )}\r\n              {!isEdit && <span>{label.date && new Date(label.date).toLocaleDateString()}</span>}\r\n            </StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </CardContent>\r\n  );\r\n}\r\n\r\nfunction findActiveStep(editedOrder: iOrder) {\r\n  const { dateStartWork, dateFinishWork, datePay } = editedOrder;\r\n  if (datePay) return 3;\r\n  if (dateFinishWork) return 2;\r\n  if (dateStartWork) return 1;\r\n  return 0;\r\n}\r\n\r\nfunction buildSteps(editedOrder: iOrder) {\r\n  const { dateOrder, dateStartWork, dateDeadline, dateFinishWork, datePay } = editedOrder;\r\n  return [\r\n    { title: 'Принят', date: dateOrder, name: 'dateOrder' },\r\n    { title: 'В работе', date: dateStartWork, name: 'dateStartWork' },\r\n    {\r\n      title: dateFinishWork ? 'Закончен' : 'Дедлайн',\r\n      date: dateFinishWork || dateDeadline,\r\n      name: dateFinishWork ? 'dateFinishWork' : 'dateDeadline'\r\n    },\r\n    { title: 'Оплачен', date: datePay, name: 'datePay' }\r\n  ] as iStep[];\r\n}\r\n","import React from 'react';\r\nimport { DatePicker } from '@material-ui/pickers';\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\r\n\r\ninterface iProps {\r\n  maxDate: Date;\r\n  handleDateChange?: Function;\r\n}\r\n\r\nexport function Queuing(props: iProps) {\r\n  const { maxDate, handleDateChange } = props;\r\n  const tomorrow = new Date().setDate(new Date().getDate() + 1);\r\n  const handleChange = (date: MaterialUiPickersDate) => {\r\n    if (handleDateChange) handleDateChange(date, 'dateStartWork');\r\n  };\r\n  return (\r\n    <DatePicker\r\n      autoOk\r\n      variant='inline'\r\n      label='В очередь с'\r\n      format='d MMMM yyyy'\r\n      value={tomorrow}\r\n      minDate={tomorrow}\r\n      maxDate={maxDate}\r\n      onChange={date => handleChange(date)}\r\n      margin='dense'\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Tabs } from '../../../store/orderLists/types';\r\nimport { iOrder } from '../../../store/order/types';\r\nimport { Queuing } from './Queuing';\r\n\r\ninterface iProps {\r\n  order: iOrder;\r\n  showedTab: Tabs | 'LastTen';\r\n  handleDateChange?: Function;\r\n}\r\n\r\nexport function Title(props: iProps) {\r\n  const { order, showedTab, handleDateChange } = props;\r\n  const { dateDeadline, dateStartWork, dateFinishWork, slug, title } = order;\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n      <Link to={`/orders/${slug}`}>{title}</Link>\r\n      {showedTab === 'DateDeadline' && !dateStartWork && (\r\n        <Queuing maxDate={dateDeadline} handleDateChange={handleDateChange} />\r\n      )}\r\n      {showedTab === 'DateDeadline' && (\r\n        <div style={{ color: 'red', fontSize: 20 }}>Осталось {calcRange(new Date(), dateDeadline)} дней</div>\r\n      )}\r\n      {showedTab === 'DateStartWork' && (\r\n        <div style={{ color: 'green', fontSize: 20 }}>В плане через {calcRange(new Date(), dateStartWork)} дней</div>\r\n      )}\r\n      {showedTab === 'NotPayed' && (\r\n        <div style={{ color: 'blue', fontSize: 20 }}>Ожидание {calcRange(dateFinishWork, new Date())} дней</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst calcRange = (fromDate?: Date, toDate?: Date) => {\r\n  if (!fromDate || !toDate) return;\r\n  toDate = new Date(toDate);\r\n  fromDate = new Date(fromDate);\r\n  const dif = fromDate.getTime() - toDate.getTime();\r\n  return Math.abs(Math.floor(dif / (1000 * 60 * 60 * 24)));\r\n};\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AttachMoney from '@material-ui/icons/AttachMoney';\r\n\r\ninterface iProps {}\r\n\r\nexport function AddExpense(props: iProps) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div>\r\n      <Button color='secondary' title='Добавить расход' onClick={handleClickOpen}>\r\n        <AttachMoney />\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Новый расход:</DialogTitle>\r\n        <DialogContent>\r\n          <TextField name='description' margin='dense' label='Описание' type='text' fullWidth />\r\n          <TextField name='cost' margin='dense' label='Цена' type='number' fullWidth />\r\n          <TextField name='spendDate' margin='dense' label='Дата' type='date' fullWidth />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color='secondary'>\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={handleClose} color='primary'>\r\n            Сохранить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddComment from '@material-ui/icons/AddComment';\r\n\r\nexport function AddNote() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button color='primary' title='Добавить заметку' onClick={handleClickOpen}>\r\n        <AddComment />\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates occasionally.\r\n          </DialogContentText>\r\n          <TextField autoFocus margin='dense' label='Email Address' type='email' fullWidth />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color='secondary'>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color='primary'>\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { CardActions, Button as MUIButton } from '@material-ui/core';\r\nimport Check from '@material-ui/icons/Check';\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\r\nimport { iOrder } from '../../../store/order/types';\r\nimport { Tabs } from '../../../store/orderLists/types';\r\nimport { AddExpense } from '../../Order/AddExpense';\r\nimport { AddNote } from '../../Order/AddNote';\r\n\r\ninterface iProps {\r\n  handleDateChange: (date: MaterialUiPickersDate, name: keyof iOrder) => void;\r\n  showedTab: Tabs | 'LastTen';\r\n}\r\n\r\nexport function FooterActions(props: iProps) {\r\n  const { showedTab, handleDateChange: handler } = props;\r\n  return (\r\n    <CardActions>\r\n      <AddExpense />\r\n      <AddNote />\r\n      {showedTab === 'DateDeadline' && <Button date='dateFinishWork' text='Выполнено' handler={handler} />}\r\n      {showedTab === 'DateStartWork' && <Button date='dateStartWork' text='Начать' handler={handler} />}\r\n      {showedTab === 'NotPayed' && <Button date='datePay' text='Оплачено' handler={handler} />}\r\n    </CardActions>\r\n  );\r\n}\r\n\r\ninterface iPropsButton {\r\n  handler: (date: MaterialUiPickersDate, name: keyof iOrder) => void;\r\n  date: keyof iOrder;\r\n  text: string;\r\n}\r\n\r\nfunction Button(props: iPropsButton) {\r\n  const { text, handler, date } = props;\r\n  return (\r\n    <MUIButton color='primary' onClick={e => handler(new Date(), date)}>\r\n      {text}\r\n      <Check />\r\n    </MUIButton>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { iOrder } from '../../../store/order/types';\r\nimport { Card, CardHeader } from '@material-ui/core';\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers';\r\nimport { Tabs } from '../../../store/orderLists/types';\r\nimport { DateSteps } from '../../Order/DateSteps';\r\nimport { Title } from './Title';\r\nimport { FooterActions } from './FooterActions';\r\n\r\ninterface iProps {\r\n  order: iOrder;\r\n  showedTab: Tabs | 'LastTen';\r\n  updateOrder?: Function;\r\n}\r\n\r\nexport function OrderCard(props: iProps) {\r\n  const { order, showedTab, updateOrder } = props;\r\n  const handleDateChange = (date: MaterialUiPickersDate, name: keyof iOrder) => {\r\n    const editedOrder: any = Object.assign({}, order);\r\n    if (name === 'dateFinishWork' && !order.dateStartWork) editedOrder.dateStartWork = editedOrder.dateOrder;\r\n    editedOrder[name] = date;\r\n    if (updateOrder) updateOrder(editedOrder);\r\n  };\r\n\r\n  return (\r\n    <Card style={{ margin: '10px 5px' }}>\r\n      <CardHeader title={<Title order={order} showedTab={showedTab} handleDateChange={handleDateChange} />} />\r\n      <DateSteps editedOrder={order} />\r\n      <FooterActions handleDateChange={handleDateChange} showedTab={showedTab} />\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { iOrder } from '../../store/order/types';\r\nimport { Tabs } from '../../store/orderLists/types';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { OrderCard } from './OrderCard/index';\r\n\r\ninterface iProps {\r\n  isPending: boolean;\r\n  list: iOrder[];\r\n  showedTab: Tabs | 'LastTen';\r\n  updateOrder?: Function;\r\n}\r\n\r\nexport function List(props: iProps) {\r\n  const { list, showedTab, updateOrder } = props;\r\n  return (\r\n    <div style={{ overflow: 'auto' }}>\r\n      {props.isPending && <CircularProgress style={{ margin: 10 }} size={30} />}\r\n      {list.map((order, index) => (\r\n        <OrderCard key={index} order={order} showedTab={showedTab} updateOrder={updateOrder} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { State } from '../../store';\nimport { iOrder } from '../../store/order/types';\nimport { setList } from '../../store/orderLists/actions';\nimport { Tabs, Tab } from '@material-ui/core';\nimport { Container } from '@material-ui/core';\nimport { updateOrder } from '../../store/orderLists/actions';\nimport { Tabs as ShowedTab } from '../../store/orderLists/types';\nimport { List } from './List';\n\ninterface iProps {\n  listName: ShowedTab;\n  list: iOrder[];\n  isPending: boolean;\n  updateOrder: Function;\n  setList: Function;\n}\n\nclass OrderLists extends React.Component<iProps> {\n  componentDidMount() {\n    this.props.setList(this.props.listName);\n  }\n\n  changeTab = (event: React.ChangeEvent<{}>, tab: ShowedTab) => {\n    this.props.setList(tab);\n  };\n\n  render() {\n    return (\n      <Container maxWidth='md'>\n        <Tabs\n          value={this.props.listName}\n          onChange={this.changeTab}\n          indicatorColor='primary'\n          textColor='primary'\n          variant='fullWidth'>\n          <Tab label='Дедлайн' value='DateDeadline' />\n          <Tab label='В очереди' value='DateStartWork' />\n          <Tab label='Неоплаченные' value='NotPayed' />\n        </Tabs>\n        <List\n          list={this.props.list}\n          showedTab={this.props.listName}\n          updateOrder={this.props.updateOrder}\n          isPending={this.props.isPending}\n        />\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (store: State) => ({\n  listName: store.orderLists.listName,\n  list: store.orderLists.list,\n  isPending: store.orderLists.isPending,\n  error: store.orderLists.error,\n  errorMessage: store.orderLists.errorMessage\n});\n\nconst mapDispatchToProps = {\n  updateOrder: updateOrder,\n  setList: setList\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OrderLists);\n","import React from 'react'\n\nconst NoMatch = () => (\n  <div>\n    404\n  </div>\n)\n\nexport default NoMatch\n","import React from 'react';\r\nimport { Paper, TextField, Button, CircularProgress, Snackbar } from '@material-ui/core';\r\nimport loginClasses from \"../../style/Login.module.scss\";\r\nimport UIClasses from \"../../style/UI.module.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { State } from '../../store';\r\nimport { submitLogin, submitLoginVK } from '../../store/user/actions';\r\n\r\ninterface iProps {\r\n    error: boolean;\r\n    errorMessage?: string;\r\n    isPending?: boolean;\r\n    onSubmitLogin: (email: string, password: string) => void\r\n    onSubmitLoginVK: () => void;\r\n}\r\n\r\ninterface iState {\r\n    email?: string;\r\n    password?: string;\r\n}\r\n\r\nclass LoginIn extends React.Component<iProps, iState> {\r\n    onSubmitLogin = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        const { email, password } = this.state;\r\n        if (email && password)\r\n            this.props.onSubmitLogin(email, password)\r\n    }\r\n\r\n    handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    render() {\r\n        const { error, errorMessage, isPending } = this.props\r\n        return (\r\n            <Paper className={loginClasses.paper}>\r\n                <form onSubmit={this.onSubmitLogin} className={loginClasses.form}>\r\n                    <TextField\r\n                        required\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        label=\"E-mail\"\r\n                        margin=\"dense\"\r\n                        onChange={this.handleInput}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        margin=\"dense\"\r\n                        onChange={this.handleInput}\r\n                    />\r\n                    <div className={UIClasses.fetcingWrapper}>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={isPending}>Войти</Button>\r\n                        {isPending && <CircularProgress size={24} className={UIClasses.fetching} />}\r\n                    </div>\r\n                </form>\r\n                <Snackbar open={error} message={<span style={{ color: \"orangered\" }}>{errorMessage}</span>} />\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store: State) => ({\r\n    error: store.user.error || false,\r\n    errorMessage: store.user.errorMessage,\r\n    isPending: store.user.isPending\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    onSubmitLogin: submitLogin,\r\n    onSubmitLoginVK: submitLoginVK\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginIn)","import React from 'react';\r\nimport { Paper, TextField, Button, CircularProgress, Snackbar } from '@material-ui/core';\r\nimport loginClasses from \"../../style/Login.module.scss\";\r\nimport { connect } from 'react-redux';\r\nimport { State } from '../../store';\r\nimport { submitLoginVK, submitRegister } from '../../store/user/actions';\r\n\r\ninterface iProps {\r\n    error: boolean;\r\n    errorMessage?: string;\r\n    isPending?: boolean;\r\n    onSubmitRegister: (email: string, password: string, name: string) => void\r\n    onSubmitLoginVK: () => void;\r\n}\r\n\r\ninterface iState {\r\n    email?: string;\r\n    password?: string;\r\n    username?: string;\r\n}\r\n\r\nclass Register extends React.Component<iProps, iState> {\r\n    onSubmitRegister = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        const { email, password, username } = this.state;\r\n        if (email && password && username)\r\n            this.props.onSubmitRegister(email, password, username)\r\n    }\r\n\r\n    handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.currentTarget;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    render() {\r\n        const { error, errorMessage, isPending } = this.props\r\n        return (\r\n            <Paper className={loginClasses.paper}>\r\n                <form onSubmit={this.onSubmitRegister} className={loginClasses.form}>\r\n                    <TextField\r\n                        required\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        label=\"E-mail\"\r\n                        margin=\"dense\"\r\n                        onChange={this.handleInput}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        label=\"Name\"\r\n                        margin=\"dense\"\r\n                        onChange={this.handleInput}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        margin=\"dense\"\r\n                        onChange={this.handleInput}\r\n                    />\r\n                    <div className={loginClasses.fetcingWrapper}>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={isPending}>Зарегистрироваться</Button>\r\n                        {isPending && <CircularProgress size={24} className={loginClasses.fetching} />}\r\n                    </div>\r\n                </form>\r\n                <Snackbar style={{ color: \"red\" }} open={error} message={<span style={{ color: \"orangered\" }}>{errorMessage}</span>} />\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (store: State) => ({\r\n    error: store.user.error || false,\r\n    errorMessage: store.user.errorMessage,\r\n    isPending: store.user.isPending\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    onSubmitRegister: submitRegister,\r\n    onSubmitLoginVK: submitLoginVK\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)","import React from \"react\";\r\nimport { Tabs, Tab, Container } from \"@material-ui/core\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport LoginIn from \"./LoginIn\";\r\nimport loginClasses from \"../../style/Login.module.scss\";\r\nimport Register from './Register';\r\n\r\ninterface iProps { }\r\ninterface iState { tabValue: number }\r\n\r\nexport default class Login extends React.Component<iProps, iState> {\r\n    constructor(props: iProps) {\r\n        super(props);\r\n        this.state = { tabValue: 0 }\r\n    }\r\n\r\n    handleChange = (event: React.ChangeEvent<{}>, newValue: number) => this.setState({ tabValue: newValue })\r\n\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\" className={loginClasses.main}>\r\n                <Tabs\r\n                    value={this.state.tabValue}\r\n                    onChange={this.handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"fullWidth\"\r\n                >\r\n                    <Tab label=\"Войти\" />\r\n                    <Tab label=\"Регистрация\" />\r\n                </Tabs>\r\n                <SwipeableViews index={this.state.tabValue} >\r\n                    <LoginIn />\r\n                    <Register />\r\n                </SwipeableViews>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Done from '@material-ui/icons/Done';\r\nimport { iOrder } from '../../store/order/types';\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers';\r\n\r\ninterface iProps {\r\n  editedOrder: iOrder | null;\r\n  isEdit: boolean;\r\n  setEditState: () => void;\r\n  cancelEditState: () => void;\r\n  submitButton: (event: React.MouseEvent<HTMLButtonElement>) => void;\r\n  handleChange: (field: keyof iOrder, value: string | MaterialUiPickersDate) => void;\r\n}\r\n\r\nexport function Title(props: iProps) {\r\n  if (!props.editedOrder) return null;\r\n  const { title, priceOrder } = props.editedOrder;\r\n  const { isEdit, setEditState, submitButton, handleChange, cancelEditState } = props;\r\n\r\n  if (isEdit)\r\n    return (\r\n      <div>\r\n        <TextField value={title} onChange={e => handleChange('title', e.currentTarget.value)} type='text' />\r\n        <TextField value={priceOrder} onChange={e => handleChange('priceOrder', e.currentTarget.value)} type='number' />\r\n        <Button onClick={cancelEditState} color='secondary'>\r\n          <Cancel />\r\n        </Button>\r\n        <Button onClick={submitButton} color='primary'>\r\n          <Done />\r\n        </Button>\r\n      </div>\r\n    );\r\n  else\r\n    return (\r\n      <div>\r\n        <span style={{ flex: 1 }}>{title}</span>\r\n        <span style={{ color: 'green', flex: 1 }}>${priceOrder}</span>\r\n        <Button onClick={setEditState} color='primary'>\r\n          <Edit />\r\n        </Button>\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { TextField, Paper } from '@material-ui/core';\r\nimport { iOrder } from '../../store/order/types';\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers';\r\n\r\ninterface iProps {\r\n  editedOrder: iOrder;\r\n  isEdit: boolean;\r\n  handleChange: (field: keyof iOrder, value: string | MaterialUiPickersDate) => void;\r\n}\r\n\r\nexport function Description(props: iProps) {\r\n  const { description } = props.editedOrder;\r\n  const { isEdit, handleChange } = props;\r\n\r\n  if (isEdit)\r\n    return (\r\n      <Paper style={{ padding: '10px', margin: '10px 0' }}>\r\n        <TextField\r\n          required={true}\r\n          fullWidth={true}\r\n          onChange={event => handleChange('description', event.currentTarget.value)}\r\n          value={description}\r\n          label='Описание'\r\n          type='text'\r\n          multiline\r\n        />\r\n      </Paper>\r\n    );\r\n  else return <Paper style={{ padding: '10px', margin: '10px 0' }}>{description}</Paper>;\r\n}\r\n","import React from 'react';\r\nimport { iExpense } from '../../store/order/types';\r\nimport { ListItem } from '@material-ui/core';\r\n\r\ninterface iProps extends iExpense {\r\n  isEdit: boolean;\r\n}\r\n\r\nexport function Expense(props: iProps) {\r\n  const { description, cost, spendDate /* , isEdit */ } = props;\r\n  return (\r\n    <ListItem>\r\n      <span>{description} </span>\r\n      <hr />\r\n      <span>{cost} </span>\r\n      <hr />\r\n      <span>{spendDate ? spendDate.toLocaleDateString() : ''}</span>\r\n    </ListItem>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  ExpansionPanelActions,\r\n  ExpansionPanel,\r\n  Button,\r\n  List\r\n} from '@material-ui/core';\r\nimport { iExpense, iOrder, iNote } from '../../store/order/types';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Expense } from './Expense';\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers';\r\nimport Add from '@material-ui/icons/Add';\r\nimport { AddExpense } from './AddExpense';\r\n\r\ninterface iProps {\r\n  expenses: iExpense[];\r\n  isEdit: boolean;\r\n  handleChange: (field: keyof iOrder, value: string | MaterialUiPickersDate | iExpense[] | iNote[]) => void;\r\n}\r\n\r\nexport function Expenses(props: iProps) {\r\n  const { isEdit, expenses, handleChange } = props;\r\n  const sum = expenses.reduce((prev, cur) => prev + cur.cost, 0);\r\n  const addExpense = (e: React.MouseEvent) => {\r\n    const newExpenses: iExpense[] = expenses.slice();\r\n    newExpenses.push({ description: 'string', cost: 5, spendDate: new Date() });\r\n    handleChange('expenses', newExpenses);\r\n  };\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <span>Расходы. Всего:{sum}</span>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <List>\r\n          {expenses.map((item, index) => (\r\n            <Expense key={item._id || index} {...item} isEdit={isEdit} />\r\n          ))}\r\n        </List>\r\n      </ExpansionPanelDetails>\r\n      <ExpansionPanelActions>\r\n        <AddExpense />\r\n        <Button onClick={addExpense} size='small' color='secondary'>\r\n          <Add fontSize='small' />\r\n        </Button>\r\n      </ExpansionPanelActions>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { iNote } from '../../store/order/types';\r\nimport { ListItem } from '@material-ui/core';\r\n\r\ninterface iProps extends iNote {\r\n  isEdit: boolean;\r\n}\r\n\r\nexport function Note(props: iProps) {\r\n  const { title, body, createdAt /* , isEdit */ } = props;\r\n  return (\r\n    <ListItem>\r\n      <span>{createdAt && new Date(createdAt).toLocaleDateString()} </span>\r\n      <hr />\r\n      <span>{title} </span>\r\n      <hr />\r\n      <span>{body} </span>\r\n    </ListItem>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  List,\r\n  ExpansionPanel,\r\n  ExpansionPanelActions,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { iNote, iOrder, iExpense } from '../../store/order/types';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Note } from './Note';\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers';\r\nimport Add from '@material-ui/icons/Add';\r\nimport { AddNote } from './AddNote';\r\n\r\ninterface iProps {\r\n  notes: iNote[];\r\n  isEdit: boolean;\r\n  handleChange: (field: keyof iOrder, value: string | MaterialUiPickersDate | iExpense[] | iNote[]) => void;\r\n}\r\n\r\nexport function Notes(props: iProps) {\r\n  const { isEdit, notes, handleChange } = props;\r\n  const addExpense = (e: React.MouseEvent) => {\r\n    const newNotes: iNote[] = notes.slice();\r\n    newNotes.push({ title: 'string', body: 'asd' });\r\n    handleChange('notes', newNotes);\r\n  };\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>Заметки</ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <List>\r\n          {notes.map((item, index) => (\r\n            <Note key={item._id || index} {...item} isEdit={isEdit} />\r\n          ))}\r\n        </List>\r\n      </ExpansionPanelDetails>\r\n      <ExpansionPanelActions>\r\n        <AddNote />\r\n        <Button onClick={addExpense} size='small' color='secondary'>\r\n          <Add fontSize='small' />\r\n        </Button>\r\n      </ExpansionPanelActions>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { CardContent } from '@material-ui/core';\r\nimport { iOrder, iExpense, iNote } from '../../store/order/types';\r\nimport { DateSteps } from './DateSteps';\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers';\r\nimport { Description } from './Description';\r\nimport { Expenses } from './Expenses';\r\nimport { Notes } from './Notes';\r\n\r\ninterface iProps {\r\n  editedOrder: iOrder | null;\r\n  isEdit: boolean;\r\n  handleChange: (field: keyof iOrder, value: string | MaterialUiPickersDate | iExpense[] | iNote[]) => void;\r\n}\r\n\r\nexport function Content(props: iProps) {\r\n  if (!props.editedOrder) return null;\r\n  const { editedOrder, isEdit, handleChange } = props;\r\n  return (\r\n    <CardContent>\r\n      <DateSteps editedOrder={editedOrder} isEdit={isEdit} handleChange={handleChange} />\r\n      <Description editedOrder={editedOrder} isEdit={isEdit} handleChange={handleChange} />\r\n      <Expenses isEdit={isEdit} expenses={editedOrder.expenses} handleChange={handleChange} />\r\n      <Notes isEdit={isEdit} notes={editedOrder.notes} handleChange={handleChange} />\r\n    </CardContent>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Card, CardHeader, CardActions } from '@material-ui/core';\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers';\r\nimport { iOrder, iExpense, iNote } from '../../store/order/types';\r\nimport { connect } from 'react-redux';\r\nimport { State } from '../../store';\r\nimport { getOrder, updateOrder, setEditState, handleChange, cancelEditState } from '../../store/order/actions';\r\nimport { Title } from './Title';\r\nimport { Content } from './Content';\r\n\r\ninterface iProps {\r\n  slug: string;\r\n  order: iOrder | null;\r\n  isEdit: boolean;\r\n  editedOrder: iOrder | null;\r\n  getOrder: (slug: string) => Promise<void>;\r\n  updateOrder: (order: iOrder) => Promise<void>;\r\n  setEditState: () => void;\r\n  cancelEditState: () => void;\r\n  handleChange: (field: keyof iOrder, value: string | MaterialUiPickersDate | iExpense[] | iNote[]) => void;\r\n  isPending: boolean;\r\n  error: boolean;\r\n  errorMessage?: string;\r\n}\r\n\r\nclass Order extends React.Component<iProps> {\r\n  componentDidMount() {\r\n    this.props.getOrder(this.props.slug);\r\n  }\r\n\r\n  toggleEditMode = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    this.props.setEditState();\r\n  };\r\n\r\n  submitButton = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    if (this.props.editedOrder) this.props.updateOrder({ ...this.props.editedOrder });\r\n  };\r\n\r\n  handleChange = (field: keyof iOrder, value: string | MaterialUiPickersDate | iExpense[] | iNote[]) => {\r\n    this.props.handleChange(field, value);\r\n  };\r\n\r\n  render() {\r\n    const { editedOrder, isEdit, setEditState, cancelEditState } = this.props;\r\n    return (\r\n      <Card style={{ width: '90%' }}>\r\n        <CardHeader\r\n          title={\r\n            <Title\r\n              editedOrder={editedOrder}\r\n              isEdit={isEdit}\r\n              setEditState={setEditState}\r\n              cancelEditState={cancelEditState}\r\n              handleChange={this.handleChange}\r\n              submitButton={this.submitButton}\r\n            />\r\n          }\r\n        />\r\n        <Content editedOrder={editedOrder} isEdit={isEdit} handleChange={this.handleChange} />\r\n        <CardActions />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store: State) => ({\r\n  slug: store.router.location.pathname.split('/')[2],\r\n  order: store.order.order,\r\n  editedOrder: store.order.editedOrder,\r\n  isEdit: store.order.isEdit,\r\n  isPending: store.order.isPending,\r\n  error: store.order.error,\r\n  errorMessage: store.order.errorMessage\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getOrder: getOrder,\r\n  updateOrder: updateOrder,\r\n  setEditState: setEditState,\r\n  cancelEditState: cancelEditState,\r\n  handleChange: handleChange\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Order);\r\n","import { Dispatch } from 'redux';\r\nimport { UpdateOrder, GetOrder } from '../../helpers/API/Methods';\r\nimport {\r\n  GET_ORDER_REQUEST,\r\n  GET_ORDER_SUCCESS,\r\n  GET_ORDER_FAIL,\r\n  PUT_ORDER_REQUEST,\r\n  PUT_ORDER_SUCCESS,\r\n  PUT_ORDER_FAIL,\r\n  SET_ORDER_READ_MODE,\r\n  SET_ORDER_EDIT_MODE,\r\n  HANDLE_CHANGE,\r\n  LoginActionTypes,\r\n  iOrder\r\n} from './types';\r\n\r\nexport function setEditState() {\r\n  return (dispatch: Dispatch<LoginActionTypes>) => {\r\n    dispatch({\r\n      type: SET_ORDER_EDIT_MODE,\r\n      isEdit: true\r\n    });\r\n  };\r\n}\r\n\r\nexport function cancelEditState() {\r\n  return (dispatch: Dispatch<LoginActionTypes>) => {\r\n    dispatch({\r\n      type: SET_ORDER_READ_MODE,\r\n      isEdit: false\r\n    });\r\n  };\r\n}\r\n\r\nexport function handleChange(field: keyof iOrder, value: any) {\r\n  return (dispatch: Dispatch<LoginActionTypes>) => {\r\n    dispatch({\r\n      type: HANDLE_CHANGE,\r\n      editedOrder: {\r\n        [field]: value\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport function getOrder(slug: string) {\r\n  return (dispatch: Dispatch<LoginActionTypes>) => {\r\n    dispatch({\r\n      type: GET_ORDER_REQUEST,\r\n      isPending: true\r\n    });\r\n    return GetOrder(slug)\r\n      .then(response => {\r\n        dispatch({\r\n          type: GET_ORDER_SUCCESS,\r\n          isPending: false,\r\n          order: response.data,\r\n          editedOrder: response.data\r\n        });\r\n      })\r\n      .catch(response => {\r\n        dispatch({\r\n          type: GET_ORDER_FAIL,\r\n          isPending: false,\r\n          error: true,\r\n          errorMessage: response.message\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function updateOrder(order: iOrder) {\r\n  return (dispatch: Dispatch<LoginActionTypes>) => {\r\n    dispatch({\r\n      type: PUT_ORDER_REQUEST,\r\n      isPending: true\r\n    });\r\n    return UpdateOrder(order)\r\n      .then(response => {\r\n        dispatch({\r\n          type: PUT_ORDER_SUCCESS,\r\n          isPending: false,\r\n          order: response.data,\r\n          editedOrder: response.data\r\n        });\r\n        dispatch({\r\n          type: SET_ORDER_READ_MODE,\r\n          isEdit: false\r\n        });\r\n      })\r\n      .catch(response => {\r\n        dispatch({\r\n          type: PUT_ORDER_FAIL,\r\n          isPending: false,\r\n          error: true,\r\n          errorMessage: response.message\r\n        });\r\n      });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Card, CardContent, CardHeader, TextField, Grid, CircularProgress, Button } from '@material-ui/core';\r\nimport { MaterialUiPickersDate, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport { iOrder } from '../../store/order/types';\r\nimport newOrderClasses from '../../style/Order.module.scss';\r\nimport UIClasses from '../../style/UI.module.scss';\r\nimport { State } from '../../store';\r\nimport { postOrder, handleChange, getLastTen } from '../../store/newOrder/actions';\r\nimport { List } from './../OrderLists/List';\r\nimport { iNewOrder } from '../../store/newOrder/types';\r\n\r\ninterface iProps {\r\n  newOrder: iNewOrder;\r\n  list: iOrder[];\r\n  getLastTen: () => void;\r\n  postOrder: (order: iNewOrder) => void;\r\n  handleChange: (field: keyof iNewOrder, value: string | MaterialUiPickersDate) => void;\r\n  isPending: boolean;\r\n  error: boolean;\r\n  errorMessage?: string;\r\n}\r\n\r\nclass NewOrder extends React.Component<iProps> {\r\n  componentDidMount() {\r\n    this.props.getLastTen();\r\n  }\r\n\r\n  onSubmitRegister = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.postOrder({ ...this.props.newOrder });\r\n  };\r\n\r\n  handleChange(field: keyof iNewOrder, value: string | MaterialUiPickersDate) {\r\n    this.props.handleChange(field, value);\r\n  }\r\n\r\n  submitButton() {\r\n    return (\r\n      <div className={UIClasses.fetcingWrapper}>\r\n        <Button type='submit' variant='contained' color='primary' disabled={this.props.isPending}>\r\n          Зарегистрировать\r\n        </Button>\r\n        {this.props.isPending && <CircularProgress size={24} className={UIClasses.fetching} />}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { title, description, dateOrder, dateDeadline, priceOrder } = this.props.newOrder;\r\n    const commonProps = { disabled: this.props.isPending, required: true, fullWidth: true };\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmitRegister} className={newOrderClasses.main} autoComplete='off'>\r\n          <Card className={newOrderClasses.main}>\r\n            <CardHeader\r\n              className={newOrderClasses.header}\r\n              title={title || 'Новый заказ'}\r\n              action={this.submitButton()}\r\n            />\r\n            <CardContent className={newOrderClasses.content}>\r\n              <Grid container spacing={3} justify='space-around' alignContent='space-between'>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    {...commonProps}\r\n                    onChange={event => this.handleChange('title', event.currentTarget.value)}\r\n                    value={title}\r\n                    label='Название заказа'\r\n                    type='text'\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                  <TextField\r\n                    {...commonProps}\r\n                    onChange={event => this.handleChange('priceOrder', event.currentTarget.value)}\r\n                    value={priceOrder}\r\n                    label='Цена'\r\n                    type='number'\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                  <TextField\r\n                    {...commonProps}\r\n                    onChange={event => this.handleChange('description', event.currentTarget.value)}\r\n                    value={description}\r\n                    label='Описание'\r\n                    type='text'\r\n                    multiline\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <KeyboardDatePicker\r\n                    {...commonProps}\r\n                    autoOk\r\n                    variant='inline'\r\n                    label='Принят'\r\n                    format='dd.MM.yyyy'\r\n                    value={dateOrder}\r\n                    InputAdornmentProps={{ position: 'start' }}\r\n                    onChange={date => this.handleChange('dateOrder', date)}\r\n                    maxDate={new Date()}\r\n                    maxDateMessage='Вы из будущего? :)'\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <KeyboardDatePicker\r\n                    {...commonProps}\r\n                    autoOk\r\n                    variant='inline'\r\n                    label='Дедлайн'\r\n                    format='dd.MM.yyyy'\r\n                    value={dateDeadline}\r\n                    InputAdornmentProps={{ position: 'start' }}\r\n                    onChange={date => this.handleChange('dateDeadline', date)}\r\n                    minDate={dateOrder || new Date()}\r\n                    minDateMessage='Дедлайн не может быть раньше даты принятия заказа'\r\n                  />\r\n                </Grid>\r\n                <div>***TODO: КТО заказал (новая сущность recipient)***</div>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </form>\r\n        <div className='listLasts'>\r\n          Оставить только недавние\r\n          <List list={this.props.list} showedTab='LastTen' isPending={this.props.isPending} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store: State) => ({\r\n  newOrder: store.newOrder.newOrder,\r\n  list: store.newOrder.list,\r\n  isPending: store.newOrder.isPending,\r\n  error: store.newOrder.error,\r\n  errorMessage: store.newOrder.errorMessage\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  postOrder: postOrder,\r\n  handleChange: handleChange,\r\n  getLastTen: getLastTen\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NewOrder);\r\n","import { Dispatch } from 'redux';\r\nimport { PostOrder, GetLastTenOrders } from '../../helpers/API/Methods';\r\nimport {\r\n  POST_ORDER_REQUEST,\r\n  POST_ORDER_SUCCESS,\r\n  POST_ORDER_FAIL,\r\n  GET_ORDERS_REQUEST,\r\n  GET_ORDERS_SUCCESS,\r\n  GET_ORDERS_FAIL,\r\n  HANDLE_CHANGE_NEW,\r\n  LoginActionTypes,\r\n  iNewOrder\r\n} from './types';\r\n\r\nexport function handleChange(field: keyof iNewOrder, value: any) {\r\n  return (dispatch: Dispatch<LoginActionTypes>) => {\r\n    dispatch({\r\n      type: HANDLE_CHANGE_NEW,\r\n      newOrder: {\r\n        [field]: value\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport function postOrder(order: iNewOrder) {\r\n  return (dispatch: Dispatch<LoginActionTypes>) => {\r\n    dispatch({\r\n      type: POST_ORDER_REQUEST,\r\n      isPending: true\r\n    });\r\n    return PostOrder(order)\r\n      .then(response => {\r\n        dispatch({\r\n          type: POST_ORDER_SUCCESS,\r\n          isPending: false,\r\n          order: response.data.order\r\n        });\r\n      })\r\n      .catch(response => {\r\n        dispatch({\r\n          type: POST_ORDER_FAIL,\r\n          isPending: false,\r\n          error: true,\r\n          errorMessage: response.message\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function getLastTen() {\r\n  return (dispatch: Dispatch<LoginActionTypes>) => {\r\n    dispatch({\r\n      type: GET_ORDERS_REQUEST,\r\n      isPending: true\r\n    });\r\n    GetLastTenOrders()\r\n      .then(response => {\r\n        dispatch({\r\n          type: GET_ORDERS_SUCCESS,\r\n          isPending: false,\r\n          list: response.data\r\n        });\r\n      })\r\n      .catch(response => {\r\n        dispatch({\r\n          type: GET_ORDERS_FAIL,\r\n          isPending: false,\r\n          error: true,\r\n          errorMessage: response.message\r\n        });\r\n      });\r\n  };\r\n}\r\n","/* import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { State } from \"../../store\";\r\nimport { iOrder } from \"../../store/orders/types\";\r\nimport { getAllOrders } from \"../../store/orders/actions\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport OrderCard from \"./OrderCard\";\r\n\r\ninterface iProps {\r\n    allOrdersList: iOrder[];\r\n    isPending: boolean;\r\n    getAllOrders: Function;\r\n}\r\n\r\ninterface iState {\r\n}\r\n\r\n\r\nclass Archive extends React.Component<iProps, iState> {\r\n    constructor(props: iProps) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllOrders();\r\n    }\r\n\r\n    handleChange = () => {\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ overflow: \"auto\", maxHeight: \"calc(100vh - 50px)\" }}>\r\n                {this.props.isPending && <CircularProgress style={{ margin: 10 }} size={30} />}\r\n                {this.props.allOrdersList.map((order, index) => (\r\n                    <OrderCard key={index} order={order} showedTab={\"LastTen\"} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store: State) => ({\r\n    allOrdersList: store.orders.allOrdersList,\r\n    isPending: store.orders.isPending\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getAllOrders: getAllOrders\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Archive); */\r\n\r\nimport React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\ninterface Data {\r\n    calories: number;\r\n    carbs: number;\r\n    fat: number;\r\n    name: string;\r\n    protein: number;\r\n}\r\n\r\nfunction createData(\r\n    name: string,\r\n    calories: number,\r\n    fat: number,\r\n    carbs: number,\r\n    protein: number,\r\n): Data {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Donut', 452, 25.0, 51, 4.9),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n    createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n    createData('KitKat', 518, 26.0, 65, 7.0),\r\n    createData('Lollipop', 392, 0.2, 98, 0.0),\r\n    createData('Marshmallow', 318, 0, 81, 2.0),\r\n    createData('Nougat', 360, 19.0, 9, 37.0),\r\n    createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction desc<T>(a: T, b: T, orderBy: keyof T) {\r\n    if (b[orderBy] < a[orderBy]) return -1;\r\n    if (b[orderBy] > a[orderBy]) return 1;\r\n    return 0;\r\n}\r\n\r\nfunction stableSort<T>(array: T[], cmp: (a: T, b: T) => number) {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = cmp(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\ntype Order = 'asc' | 'desc';\r\n\r\nfunction getSorting<K extends keyof any>(order: Order, orderBy: K, ): (a: { [key in K]: number | string }, b: { [key in K]: number | string }) => number {\r\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\ninterface HeadRow {\r\n    disablePadding: boolean;\r\n    id: keyof Data;\r\n    label: string;\r\n    numeric: boolean;\r\n}\r\n\r\nconst headRows: HeadRow[] = [\r\n    { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n    { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n    { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n    { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n    { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n    numSelected: number;\r\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\r\n    onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void;\r\n    order: Order;\r\n    orderBy: string;\r\n    rowCount: number;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n    const createSortHandler = (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell>\r\n                {headRows.map(row => (\r\n                    <TableCell\r\n                        key={row.id}\r\n                        align={row.numeric ? 'right' : 'left'}\r\n                        padding={row.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === row.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === row.id}\r\n                            direction={order}\r\n                            onClick={createSortHandler(row.id)}\r\n                        >\r\n                            {row.label}\r\n\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n    numSelected: number;\r\n}\r\n\r\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n    const { numSelected } = props;\r\n    return (\r\n        <Toolbar>\r\n            <div> {numSelected > 0 ?\r\n                (<span>{numSelected} selected </span>)\r\n                : (<span> Nutrition </span>)}\r\n            </div>\r\n            <div>\r\n                {numSelected > 0 ? (\r\n                    <Tooltip title=\"Delete\">\r\n                        <IconButton aria-label=\"delete\">\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                ) : (\r\n                        <Tooltip title=\"Filter list\">\r\n                            <IconButton aria-label=\"filter list\">\r\n                                <FilterListIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    )}\r\n            </div>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default function EnhancedTable() {\r\n    const [order, setOrder] = React.useState<Order>('asc');\r\n    const [orderBy, setOrderBy] = React.useState<keyof Data>('calories');\r\n    const [selected, setSelected] = React.useState<string[]>([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    function handleRequestSort(event: React.MouseEvent<unknown>, property: keyof Data) {\r\n        const isDesc = orderBy === property && order === 'desc';\r\n        setOrder(isDesc ? 'asc' : 'desc');\r\n        setOrderBy(property);\r\n    }\r\n\r\n    function handleSelectAllClick(event: React.ChangeEvent<HTMLInputElement>) {\r\n        if (event.target.checked) {\r\n            const newSelecteds = rows.map(n => n.name);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    }\r\n\r\n    function handleClick(event: React.MouseEvent<unknown>, name: string) {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected: string[] = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    }\r\n\r\n    function handleChangePage(event: unknown, newPage: number) {\r\n        setPage(newPage);\r\n    }\r\n\r\n    function handleChangeRowsPerPage(event: React.ChangeEvent<HTMLInputElement>) {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    }\r\n\r\n    const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n    return (\r\n        <div>\r\n            <Paper>\r\n                <EnhancedTableToolbar numSelected={selected.length} />\r\n                <div>\r\n                    <Table\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size=\"medium\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={rows.length}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(rows, getSorting(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.name);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            onClick={event => handleClick(event, row.name)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row.name}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                                {row.name}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{row.calories}</TableCell>\r\n                                            <TableCell align=\"right\">{row.fat}</TableCell>\r\n                                            <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                                            <TableCell align=\"right\">{row.protein}</TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: 49 * emptyRows }}>\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </div>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    backIconButtonProps={{\r\n                        'aria-label': 'previous page',\r\n                    }}\r\n                    nextIconButtonProps={{\r\n                        'aria-label': 'next page',\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function ReadMe() {\r\n  return (\r\n    <div style={{ padding: 100 }}>\r\n      <h1>Учебный проект</h1>\r\n      <h2>Используемые технологии:</h2>\r\n      <ul>\r\n        <li>nodeJS</li>\r\n        <li>express</li>\r\n        <li>mongoose</li>\r\n        <li>react</li>\r\n        <li>redux</li>\r\n        <li>router</li>\r\n        <li>TypeScript</li>\r\n      </ul>\r\n      <p>P.S. кнопка Generate сгенерирует вам первых 20 записей в остальном все еще очень сырое</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { connect } from 'react-redux';\nimport { History } from 'history';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport ruLocale from 'date-fns/locale/ru';\n\nimport { State } from '../store';\n\nimport NavBar from '../components/NavBar';\nimport OrderLists from './OrderLists';\nimport NoMatch from '../components/NoMatch';\nimport Login from './Login/Login';\nimport Order from './Order';\n\nimport app from '../style/App.module.scss';\nimport NewOrder from './Order/NewOrder';\nimport Archive from './Archive/Archive';\nimport ReadMe from '../components/Readme';\n\ninterface iProps {\n  history: History;\n  user: any;\n}\n\ninterface iUser {\n  name: string;\n  email: string;\n  token: string;\n}\n\nclass App extends React.Component<iProps> {\n  redirectToLogin = () => (\n    <>\n      <Redirect to='/login' />\n      <Login />\n    </>\n  );\n\n  redirectToMain = () => {\n    if (!this.props.user.token) return <Login />;\n    else return <Redirect to='/' />;\n  };\n\n  render() {\n    const { user, history } = this.props;\n    return (\n      <ConnectedRouter history={history}>\n        <div className={app.appRoot}>\n          {user.token && <NavBar className={app.navbar} />}\n          <div className={app.content}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\n              <Switch>\n                {!user.token && <Route path='/' render={this.redirectToLogin} />}\n                <Route exact path='/' component={OrderLists} />\n                <Route path='/login' render={this.redirectToMain} />\n                <Route path='/archive' component={Archive} />\n                <Route path='/readme' component={ReadMe} />\n                <Route path='/orders/neworder' component={NewOrder} />\n                <Route path='/orders/:order' component={Order} />\n                <Route component={NoMatch} />\n              </Switch>\n            </MuiPickersUtilsProvider>\n          </div>\n        </div>\n      </ConnectedRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (store: State) => ({\n  user: store.user\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config: iConfig) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config: iConfig) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: RequestInfo, config: iConfig) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else if (typeof swUrl === \"string\") {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\ninterface iConfig {\n  onUpdate: Function;\n  onSuccess: Function;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./style/Index.module.scss\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker/serviceWorker\";\nimport { store, history } from \"./store\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App history={history} />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__NjAQp\",\"form\":\"Login_form__1hkbv\",\"paper\":\"Login_paper__2wZzY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fetcingWrapper\":\"UI_fetcingWrapper__1ZmMx\",\"fetching\":\"UI_fetching__3SALQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Order_main__1LV5b\",\"content\":\"Order_content__2psjW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"App_navbar__3QOFB\",\"content\":\"App_content__1HXX8\",\"appRoot\":\"App_appRoot__1fSFw\"};"],"sourceRoot":""}